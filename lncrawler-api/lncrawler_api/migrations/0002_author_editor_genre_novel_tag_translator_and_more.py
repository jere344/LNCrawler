# Generated by Django 5.2.1 on 2025-05-10 18:39

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("lncrawler_api", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Editor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Novel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Translator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NovelFromSource",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("source_url", models.URLField(max_length=500)),
                ("source_name", models.CharField(max_length=100)),
                ("cover_url", models.URLField(blank=True, max_length=500, null=True)),
                ("language", models.CharField(default="en", max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Ongoing", "Ongoing"),
                            ("Completed", "Completed"),
                            ("Unknown", "Unknown"),
                            ("On Hiatus", "On Hiatus"),
                            ("Cancelled", "Cancelled"),
                        ],
                        default="Unknown",
                        max_length=20,
                    ),
                ),
                ("synopsis", models.TextField(blank=True, null=True)),
                ("is_rtl", models.BooleanField(default=False)),
                ("novel_tags", models.TextField(blank=True, null=True)),
                ("has_manga", models.BooleanField(blank=True, null=True)),
                ("has_mtl", models.BooleanField(blank=True, null=True)),
                ("source", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "original_publisher",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "english_publisher",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "novelupdates_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_chapter_update", models.DateTimeField(blank=True, null=True)),
                (
                    "meta_file_path",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "authors",
                    models.ManyToManyField(
                        blank=True, related_name="novels", to="lncrawler_api.author"
                    ),
                ),
                (
                    "editors",
                    models.ManyToManyField(
                        blank=True, related_name="novels", to="lncrawler_api.editor"
                    ),
                ),
                (
                    "genres",
                    models.ManyToManyField(
                        blank=True, related_name="novels", to="lncrawler_api.genre"
                    ),
                ),
                (
                    "novel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sources",
                        to="lncrawler_api.novel",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="novels", to="lncrawler_api.tag"
                    ),
                ),
                (
                    "translators",
                    models.ManyToManyField(
                        blank=True, related_name="novels", to="lncrawler_api.translator"
                    ),
                ),
            ],
            options={
                "unique_together": {("novel", "source_url")},
            },
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("chapter_id", models.IntegerField()),
                ("url", models.URLField(max_length=500)),
                ("title", models.CharField(max_length=255)),
                ("volume", models.IntegerField(default=0)),
                (
                    "volume_title",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("file_path", models.CharField(blank=True, max_length=500, null=True)),
                ("images", models.JSONField(default=dict)),
                ("success", models.BooleanField(default=False)),
                (
                    "novel_from_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chapters",
                        to="lncrawler_api.novelfromsource",
                    ),
                ),
            ],
            options={
                "ordering": ["chapter_id"],
                "unique_together": {("novel_from_source", "chapter_id")},
            },
        ),
        migrations.CreateModel(
            name="Volume",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("volume_id", models.IntegerField()),
                ("title", models.CharField(max_length=255)),
                ("start_chapter", models.IntegerField(blank=True, null=True)),
                ("final_chapter", models.IntegerField(blank=True, null=True)),
                ("chapter_count", models.IntegerField(default=0)),
                (
                    "novel_from_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="volumes",
                        to="lncrawler_api.novelfromsource",
                    ),
                ),
            ],
            options={
                "unique_together": {("novel_from_source", "volume_id")},
            },
        ),
    ]
